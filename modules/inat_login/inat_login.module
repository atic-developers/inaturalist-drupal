<?php
  /**
   * iNaturalist login module
   * Copyright 2014 Projecte Ictineo SCCL (www.projecteictineo.com)
   * aGPLv3
   */

/**
 * Implements hook_menu();
 */
function inat_login_menu() {
  $items['admin/config/inaturalist/config/login'] = array(
    'title' => t('iNaturalist login connector'),
    'description' => t('iNaturalist login connector settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('inat_login_page_config'),
    'type' => MENU_LOCAL_TASK,
    'access arguments' => array('access administration pages'),
  );
  return $items;
}

/**
 * Implements hook_block_info()
 */
function inat_login_block_info() {
  $blocks['inat_login'] = array (
    'info' => t('iNaturalist login block'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  $blocks['inat_usrinfo'] = array (
    'info' => t('iNaturalist logged user information'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view()
 * https://api.drupal.org/api/drupal/modules%21block%21block.api.php/function/hook_block_view/7
 */
function inat_login_block_view($delta = '') {
  switch($delta) {
    case 'inat_login':
      $block['subject'] = t('iNaturalist login');
      $block['content'] = drupal_get_form('inat_login_login_form');
    break;
    case 'inat_usrinfo':
      $block['subject'] = t('iNaturalist user information');
      $block['content'] = inat_login_usrinfo_content($delta);
    break;
  }
  return $block;
}


/**
 * Helper functions [no hooks]
 */
/**
 * Form for configuration
 */
function inat_login_page_config() {
  $form['inat_login_conf1'] = array(
    '#type' => 'textfield',
    '#title' => t('asdf'),
    '#description' => t('asdf'),
    '#required' => TRUE,
    '#default_value' => variable_get('inat_base_url', 'http://www.inaturalist.org'),
  );
  return system_settings_form($form);
}
/**
 * this function returns string o renderable array
 * with the block content for inat_login block
 */
function inat_login_login_form($form_state) {
  // Settings to pass into javascript file with the login url
  //drupal_add_js(array('sso_moodle' =>array('login_url' =>variable_get('moodle_login_url',''))), 'setting');

  $form['#method'] = 'post';
  $form['#attributes'] = array( 'id' => 'inat_login_login_form' );
  $form['user_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Username or email'),
    '#size' => 30,
    '#required' => TRUE,
  );
  $form['user_password'] = array(
    '#type' => 'password',
    '#title' => t('password'),
    '#size' => 30,
    '#required' => TRUE,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Login'),
  );
  return $form;
}

function inat_login_login_form_submit($form, &$form_state){

  dsm('form submited');
 $consumer = DrupalOAuthConsumer::load('47b33111033b673dd66ece3eefb217f3bc3bce2d18720452ed143b6bb1d7c696', FALSE);
  if (!$consumer) {
    $consumer = new DrupalOAuthConsumer('47b33111033b673dd66ece3eefb217f3bc3bce2d18720452ed143b6bb1d7c696', '051ecceb16455addde2cb909e5560e91c7bb3f104de078dbf0fe6bc238ecf5d5');
    $consumer->write();
  }
  $sig_method = DrupalOAuthClient::signatureMethod();
  $client = new DrupalOAuthClient($consumer, NULL, $sig_method);
 
  //$request_token = $client->getRequestToken('https://www.inaturalist.org/oauth/token', array(
    //'callback' => 'http://178.32.218.104:8080/urraca1/inat/observations',
    //'params' => array (
      //'client_id' => '47b33111033b673dd66ece3eefb217f3bc3bce2d18720452ed143b6bb1d7c696',
      //'client_secret' => '051ecceb16455addde2cb909e5560e91c7bb3f104de078dbf0fe6bc238ecf5d5',
      //'code' => '91748659fa010f6f42dd756098faab1a7b12261ada294abc82a72065e8f65da3',
      //'redirect_uri' => 'http://178.32.218.104:8080/urraca1/',
      //'grant_type' => 'authorization_code',
    //)
  //));
  $params = array (
    'client_id' => '47b33111033b673dd66ece3eefb217f3bc3bce2d18720452ed143b6bb1d7c696',
    'client_secret' => '051ecceb16455addde2cb909e5560e91c7bb3f104de078dbf0fe6bc238ecf5d5',
    'code' => '91748659fa010f6f42dd756098faab1a7b12261ada294abc82a72065e8f65da3',
    'redirect_uri' => 'http://179.32.218.104:8080/urraca1',
    'grant_type' => 'authorization_code',
  );
  $url = url('https://www.inaturalist.org/oauth/token', array('query' => $params, 'https' => 'TRUE'));  
  $opt = array('method' => 'POST');
  dsm('call: ');
  dsm($url);
  dsm($opt);
  $req = drupal_http_request($url, $opt); 
  dsm($req);
  dsm('post-requesttoken');
  //$request_token->write();
 
  //$_SESSION['vptest_request_key'] = $request_token->key;
 
  //$auth_url = $client->getAuthorizationUrl('http://sandbox.local/oauth/authorize', array(
    //'callback' => 'http://d7.local/vptest/access',
  //));
 
  //drupal_goto($auth_url);
  // Initial psuedo-code, sending an HTTP petiton directly to inat framework
  // peticio_HTML=( $form_state['values']['user_email'], $form_state['values']['user_password'];
  // send_petition_to(url,peticio_HTML);
  
 //First of all, we extract from de form the values, and we construct an a formated array to make de petition
 //$verb = it's de place where we are asking, in this example de session action is who proces login Inat form
  //TODO S'ha de configurar els permisos ja que sino estas logejat no et deixa accedir a inat_base_url

   //$verb = 'session';
   //$user_email = $form_state['values']['user_email'];
   //$user_password = $form_state['values']['user_password'];
   //$query = array('user_email' => $user_email, 'user_password' => $user_password);
   
   //$options = array('query' => $query, 'https' => FALSE);
 //Once we have de data ready, we should construct our url and call the function drupal_http_request 
   //$url = url(variable_get('inat_base_url','http://www.inaturalist.org') . '/' . $verb, $options);  
   //$options = array('method' => 'POST');
   //$result = drupal_http_request($url, $options);
   
   // drupal_set_message(t('The form has been submitted. OLAKASEEEEEEEE'));
   // we get de data in json format.
  // dsm($result);
   //$json = drupal_json_decode($result->data);
 
   //   dsm($json); 
   //return var_export($json);
  // return theme('inat_observations', array('observations' => $json)); 
   

}


/**
 * this function returns string o renderable array
 * with the block content for inat_usrinfo block
 */
function inat_login_usrinfo_content($delta) {

  $verb = 'users/edit.json';
  $query = array();
  $options = array('query' => $query, 'https' => FALSE);
  $url = url(variable_get('inat_base_url','http://www.inaturalist.org') . '/' . $verb, $options);
 dsm($url);
  $options = array('method' => 'POST');
  $result = drupal_http_request($url, $options);
  $json = drupal_json_decode($result->data);
  dsm($json);
  dsm($result);
  return theme('inat_login', array('login' => $json));

}
/**
* Implements hook_theme
*/
function inat_login_theme($existing, $type, $theme, $path) {
  return array(
    'inat_user_login' => array(
      'variables' => array('login' => NULL),
      'template' => 'user_login',
      'path' => drupal_get_path('module', 'inat_login') . '/theme',
    )
 
  );
}
